name: build_nvprint
on:
  workflow_dispatch:
  schedule:
    # Ровно 3 окна в месяц с минимальными вызовами:
    - cron: "0 23 9 * *"   # 10 число 04:00 (Алматы)
    - cron: "0 23 19 * *"  # 20 число 04:00 (Алматы)
    # Для 1-го числа (зависит от длины месяца) — покрываем 28..31:
    - cron: "0 23 28 * *"
    - cron: "0 23 29 * *"
    - cron: "0 23 30 * *"
    - cron: "0 23 31 * *"

concurrency:
  group: build_nvprint_${{ github.ref_name }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Гейт: выполняем шаги только когда реально 04:00 в Алматы и день 1/10/20
      - name: Check Almaty schedule gate
        id: check
        run: |
          python - <<'PY'
          from datetime import datetime, timedelta
          import os
          now_utc = datetime.utcnow()
          now_alm = now_utc + timedelta(hours=5)  # Asia/Almaty ~ UTC+5
          day  = now_alm.day
          hour = now_alm.hour
          should = 'yes' if (day in (1,10,20) and hour == 4) else 'no'
          print(f"::notice::Almaty now: {now_alm:%Y-%m-%d %H:%M:%S}, should_run={should}")
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"run={should}\n")
          PY

      - uses: actions/setup-python@v5
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check.outputs.run == 'yes' }}
        with:
          python-version: '3.11'

      - name: Install deps
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check.outputs.run == 'yes' }}
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Ensure keywords file
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check.outputs.run == 'yes' }}
        run: |
          python - <<'PY'
          import os, io
          os.makedirs("docs", exist_ok=True)
          path = "docs/nvprint_keywords.txt"
          if not os.path.isfile(path):
              data = "\n".join([
                  "Блок фотобарабарана",
                  "Картридж",
                  "Печатающая головка",
                  "Струйный картридж",
                  "Тонер-картридж",
                  "Тонер-туба",
              ]) + "\n"
              with io.open(path, "w", encoding="utf-8") as f:
                  f.write(data)
          with io.open(path, "r", encoding="utf-8") as f:
              print("Using keywords:\\n" + f.read())
          PY

      - name: Build NVPrint feed
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check.outputs.run == 'yes' }}
        env:
          NVPRINT_XML_URL: 'https://api.nvprint.ru/api/hs/getprice/398/881105302369/none/?format=xml&getallinfo=true'
          NVPRINT_LOGIN: ${{ secrets.NVPRINT_LOGIN }}
          NVPRINT_PASSWORD: ${{ secrets.NVPRINT_PASSWORD }}
          OUT_FILE: docs/nvprint.yml
          HTTP_TIMEOUT: "60"
          NVPRINT_KEYWORDS_FILE: docs/nvprint_keywords.txt
        run: |
          set -euo pipefail
          python scripts/build_nvprint.py

      - name: Commit & push feed
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check.outputs.run == 'yes' }}
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/nvprint.yml docs/nvprint_keywords.txt || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "Update nvprint.yml"
          git pull --rebase origin "$BRANCH_NAME" || git pull --no-rebase -X ours origin "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"
