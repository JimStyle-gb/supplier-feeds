name: build_nvprint

on:
  # Стартуем редко: 23:00 UTC в 9/19/30/31 (это ~04:00 Asia/Almaty на 10/20/1)
  schedule:
    - cron: "0 23 9,19,30,31 * *"
  workflow_dispatch:
    inputs:
      force:
        description: "Запустить вручную прямо сейчас (игнорировать расписание)"
        required: false
        default: "true"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Decide run flag (schedule vs manual)
        id: runflag
        env:
          FORCE_INPUT: ${{ inputs.force }}
          EVENT_NAME: ${{ github.event_name }}
        shell: bash
        run: |
          set -e
          if [ "${EVENT_NAME}" = "schedule" ]; then
            export TZ=Asia/Almaty
            echo "Now (Almaty): $(date)"
            DAY=$(date +%-d)
            HOUR=$(date +%H)
            if [[ "$DAY" =~ ^(1|10|20)$ ]] && [ "$HOUR" = "04" ]; then
              echo "run=true" >> "$GITHUB_OUTPUT"
              echo "Gate: pass (scheduled 04:00 Asia/Almaty on 1/10/20)."
            else
              echo "run=false" >> "$GITHUB_OUTPUT"
              echo "Gate: skip."
            fi
          else
            if [ "${FORCE_INPUT:-true}" = "false" ]; then
              echo "run=false" >> "$GITHUB_OUTPUT"; echo "Manual force=false => skip."
            else
              echo "run=true"  >> "$GITHUB_OUTPUT"; echo "Manual force=true => pass."
            fi
          fi

      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        if: steps.runflag.outputs.run == 'true'
        with:
          python-version: '3.11'

      - name: Install deps
        if: steps.runflag.outputs.run == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Ensure keywords file
        if: steps.runflag.outputs.run == 'true'
        run: |
          python - <<'PY'
          import os, io
          os.makedirs("docs", exist_ok=True)
          p = "docs/nvprint_keywords.txt"
          if not os.path.isfile(p):
              with io.open(p, "w", encoding="utf-8") as f:
                  f.write("Картридж\nТонер-картридж\nБлок фотобарабана\n")
          print("keywords ready:", p)
          PY

      - name: Build NVPrint feed
        if: steps.runflag.outputs.run == 'true'
        env:
          NVPRINT_XML_URL: 'https://api.nvprint.ru/api/hs/getprice/398/881105302369/none/?format=xml&getallinfo=true'
          NVPRINT_LOGIN: ${{ secrets.NVPRINT_LOGIN }}
          NVPRINT_PASSWORD: ${{ secrets.NVPRINT_PASSWORD }}
          OUT_FILE: docs/nvprint.yml
          OUTPUT_ENCODING: windows-1251
          HTTP_TIMEOUT: "60"
          NVPRINT_KEYWORDS_FILE: docs/nvprint_keywords.txt
        run: |
          set -e
          python scripts/build_nvprint.py

      - name: Commit & push feed
        if: steps.runflag.outputs.run == 'true'
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/nvprint.yml docs/nvprint_keywords.txt || true
          git commit -m "chore(nvprint): update docs/nvprint.yml" || echo "No changes"
          git pull --rebase origin "$BRANCH_NAME" || true
          git push origin "$BRANCH_NAME" || true

      - name: Skipped
        if: steps.runflag.outputs.run != 'true'
        run: echo "Skipping — not 04:00 Asia/Almaty on 1/10/20 and manual force=false."
