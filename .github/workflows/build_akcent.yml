# =============================== #
#   CI для сборки фида Akcent     #
#   Результат: docs/akcent.yml    #
# =============================== #

name: Build Akcent feed

on:
  # Ручной запуск из вкладки Actions
  workflow_dispatch:

  # Расписание (UTC!): 03:13, 09:13, 15:13, 21:13 каждый день
  # Если нужна привязка к Алматы (+5), сдвигай время с учётом UTC.
  schedule:
    - cron: '13 3,9,15,21 * * *'

  # Автозапуск при изменении скрипта/правил
  push:
    paths:
      - 'scripts/build_akcent.py'
      - 'docs/akcent_keywords.txt'
      - '.github/workflows/build_akcent.yml'

# Разрешаем пушить изменения обратно в репозиторий
permissions:
  contents: write

# Не пускать параллельные запуски одного и того же воркфлоу
concurrency:
  group: build-akcent
  cancel-in-progress: false

jobs:
  build:
    # Одна сборка — один джоб
    name: Build Akcent YML
    runs-on: ubuntu-latest

    steps:
      # 1) Забираем репозиторий
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Ставит Python указанной версии
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3) Ставим зависимости, которые нужны скрипту
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      # 4) Запускаем сборку YML
      #    В env — все настройки, которые использует scripts/build_akcent.py
      - name: Build Akcent feed
        env:
          # Метка поставщика (попадает в FEED_META)
          SUPPLIER_NAME: akcent
          # URL исходного XML у поставщика
          SUPPLIER_URL: https://ak-cent.kz/export/Exchange/article_nw2/Ware02224.xml
          # Путь до выходного файла (только YML)
          OUT_FILE: docs/akcent.yml
          # Кодировка выгрузки под Satu
          OUTPUT_ENCODING: windows-1251
          # Сетевые параметры скачивания XML
          TIMEOUT_S: '30'           # таймаут запроса (сек)
          RETRIES: '4'              # количество повторов
          RETRY_BACKOFF_S: '2'      # множитель задержки между повторами
          MIN_BYTES: '1500'         # минимальный размер ответа (защита от обрезанных файлов)
          # vendorCode: префикс и автосоздание тега при отсутствии
          VENDORCODE_PREFIX: AC
          VENDORCODE_CREATE_IF_MISSING: '1'
          # Фильтр по ключевым словам: берём только те товары, чьи <name> совпали
          AKCENT_KEYWORDS_PATH: docs/akcent_keywords.txt
          AKCENT_KEYWORDS_MODE: include   # include — оставляем совпавшие; exclude — отбрасываем совпавшие
        run: |
          set -e
          python --version
          python scripts/build_akcent.py

      # 5) Коммитим и пушим изменения, если файл действительно изменился
      - name: Commit & push if changed
        env:
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
        run: |
          set -e
          git config user.name  "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(akcent): update docs/akcent.yml [skip ci]"
            git push
          fi
